&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Процедура Команда1(Команда)
	
	ПродолжитьОбработку();
	
КонецПроцедуры

&НаСервере
Процедура ПродолжитьОбработку()
	
	СинхронизацияГалактикаОбщегоНазначения.ПолучитьИзмененияНаСервере(ЧислоПотоков, ИмяТаблицы);
		
КонецПроцедуры

&НаСервере
Процедура Команда2НаСервере()
	
	СинхронизацияГалактикаОбщегоНазначения.ОчиститьСоответствие(ИмяТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2(Команда)
	
	Команда2НаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СжатьТаблицуНаСервере()
	
	СинхронизацияГалактикаОбщегоНазначения.СжатьСоответствие(ИмяТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура СжатьТаблицу(Команда)
	
	Если Не ЗначениеЗаполнено(ИмяТаблицы) Тогда 
		Возврат;
	КонецЕсли;
	
	СжатьТаблицуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РольДоступна = РольДоступна("ПолучениеДанныхИзГалактика") Или РольДоступна("ПолныеПрава");
	
	Если НЕ РольДоступна Тогда 
		
		Сообщение = Новый СообщениеПользователю;
		
		Сообщение.Текст = "Вы не обладаете правами выполнение загрузки данных";
		
		Сообщение.Сообщить();
		
		Отказ = Истина;
		
		Возврат;
		
	КонецЕсли;
	
	ЧислоПотоков = 1;
	
	СписокТаблиц = "";
	
	Для Каждого ТекТаблица Из ВнешниеИсточникиДанных.ГалактикаБД.Таблицы Цикл
		
		СписокТаблиц = СписокТаблиц + Строка(ТекТаблица) + Символы.ПС;
		
	КонецЦикла;
	
	СписокТаблиц = СтрЗаменить(СписокТаблиц, "ВнешнийИсточникДанныхТаблицаМенеджер.", "");
	
	ЗаполнитьСписокТаблиц();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьСоСсылкамиНаСервере()
	
	СинхронизацияГалактикаОбщегоНазначения.ОчиститьТаблицуИПометитьНаудаление(ИмяТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСоСсылками(Команда)
	
	Если Не ЗначениеЗаполнено(ИмяТаблицы) Тогда 
		Возврат;
	КонецЕсли;

	ОчиститьСоСсылкамиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АлиасыТаблицПриАктивизацииСтроки(Элемент)
	
	Если Не Элемент.ТекущиеДанные=Неопределено Тогда 
		
		ИмяТаблицы = Элемент.ТекущиеДанные.ИмяТаблицы;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	//ПараметрыОбработчикаОжидания = Неопределено;
	//
	//ОтключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания");
	//
	//РезультатВыполнения = ВыполнитьФоновоеЗаданиеНаСервере();
	//
	//Если РезультатВыполнения.ЗаданиеВыполнено Тогда    
	//	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);
	//Иначе
	//	ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
	//	ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);    
	//КонецЕсли;
	
	ПродолжитьВыполнениеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПродолжитьВыполнениеНаСервере()
	
	МассивТаблиц = Новый Массив;
	
	Для Каждого ТекСтрока Из СписокТаблиц1 Цикл 
		
		Если Не ТекСтрока.Пометка Тогда 
			Продолжить;
		КонецЕсли;
		
		МассивТаблиц.Добавить(ТекСтрока.Значение);
		
	КонецЦикла;
	
	НаборПараметров = Новый Массив;
		
	НаборПараметров.Добавить(МассивТаблиц);

	Задание = ФоновыеЗадания.Выполнить("СинхронизацияГалактикаОбщегоНазначения.ВыполнитьСинхронизациюСправочников", НаборПараметров);
	
	МассивЗаданий = Новый Массив;
	
	МассивЗаданий.Добавить(Задание);
	
	ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьФоновоеЗаданиеНаСервере()
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);    
	
	ИдентификаторЗадания = Неопределено;
	
	МассивТаблиц = Новый Массив;
	
	Для Каждого ТекСтрока Из СписокТаблиц1 Цикл 
		
		Если Не ТекСтрока.Пометка Тогда 
			Продолжить;
		КонецЕсли;
		
		МассивТаблиц.Добавить(ТекСтрока.Значение);
		
	КонецЦикла;
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("МассивТаблиц", МассивТаблиц);
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		// здесь должен быть вызов нашей процедуры
		РезультатВыполнения = Новый Структура("ЗаданиеВыполнено", Истина);
		
	Иначе
		
		РезультатВыполнения  = ДлительныеОперации.ЗапуститьВыполнениеВФоне(УникальныйИдентификатор, 
		"СинхронизацияГалактикаОбщегоНазначения.ВыполнитьСинхронизациюСправочников", 
		СтруктураПараметров, 
		"Клиентское обновление данных");    
		
		ИдентификаторЗадания = РезультатВыполнения.ИдентификаторЗадания;
		АдресХранилища       = РезультатВыполнения.АдресХранилища;    
		
	КонецЕсли;
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
		
	Попытка
		
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
			
			РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);
			
			Текст = "Данные успешно добавлены";
			Прогресс = 100; 
			
			Состояние(Текст, Прогресс, , БиблиотекаКартинок.ДлительнаяОперация48); 	
			
		Иначе
			
			Текст = "Выполняется добавление данных";
			Прогресс = 50; 
			
			Состояние(Текст, Прогресс, , БиблиотекаКартинок.ДлительнаяОперация48); 	
			
			
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			
			ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 
			
			ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
			
		КонецЕсли;
		
	Исключение 
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)  
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокТаблиц()
	
	//СинхронизацияГалактикаПокупкиПродажи	
	СписокТаблиц1.Добавить("dbo_T_KATPODR", "Направление деятельности");
	СписокТаблиц1.Добавить("dbo_T_KATPODR_SUBDIVISION", "Подразделения");
	СписокТаблиц1.Добавить("dbo_T_KATPODR_STOCK", "Склады");
	СписокТаблиц1.Добавить("dbo_T_KATMC","МЦ");
	СписокТаблиц1.Добавить("dbo_T_DOGOVOR", "Договоры");
	СписокТаблиц1.Добавить("dbo_T_STZATR","Статьи затрат");
	СписокТаблиц1.Добавить("dbo_T_KATBANK", "Банковские счета");
	СписокТаблиц1.Добавить("dbo_T_KATORG","Контрагенты");
	СписокТаблиц1.Добавить("dbo_T_HOZOPER", "Хоз опер");
	СписокТаблиц1.Добавить("dbo_T_KATUSL", "Услуги");
	СписокТаблиц1.Добавить("dbo_T_PERSONS_KONTR", "Физ. лица в контрагентов");
	СписокТаблиц1.Добавить("dbo_T_GROUPMC", "Группы АУ номенклатуры");
	
	//СинхронизацияГалактикаРБП
	СписокТаблиц1.Добавить("dbo_T_KATUSL_RBP","РБП");
	
	//СинхронизацияГалактикаОСНМА
	СписокТаблиц1.Добавить("dbo_T_KATOS","ОС");
	СписокТаблиц1.Добавить("dbo_T_KATOS_NMA","НМА");
	СписокТаблиц1.Добавить("dbo_T_KATMOL","МОЛ");
	СписокТаблиц1.Добавить("dbo_T_KATMC_OS", "Номенклатуры в ОС");
	
	//СинхронизацияГалактикаДС
	СписокТаблиц1.Добавить("dbo_T_HOZOPER_DOHOD", "Статьи доходов");
	СписокТаблиц1.Добавить("dbo_T_HOZOPER_DS", "Статьи ДС");
	
	
КонецПроцедуры
